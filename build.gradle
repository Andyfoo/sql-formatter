plugins {
	id 'java'
	id 'groovy'
	id 'jacoco'
	id 'maven'
	id 'signing'
}

group = "com.github.vertical-blank"
version = project.getProperties().version

sourceCompatibility = targetCompatibility = '1.8'

repositories {
	jcenter()
}

sourceSets {
	test {
		groovy { srcDirs = ['src/test/groovy'] as SourceSet}
	}
}

test {
	useJUnitPlatform()
}
jacocoTestReport {
	reports {
		xml.enabled true
		xml.destination file("${buildDir}/reports/jacoco/report.xml")
		html.enabled false
		csv.enabled false
	}
}
check.dependsOn jacocoTestReport

dependencies {
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'

	testImplementation group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.5.6'
}

def isReleaseBuild = project.hasProperty("release")
def isSnapShotBuild = project.hasProperty("snapshot")
def isDevBuild = !(isReleaseBuild || isSnapShotBuild)
def sonatypeRepositoryUrl
if (isReleaseBuild) {
    sonatypeRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
} else if (isSnapShotBuild) {
    version += "-SNAPSHOT"
    sonatypeRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
} else {
    version += "-SNAPSHOT"
}


task javadocJar(type: Jar) {
	classifier = 'javadoc'
	from javadoc
}

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

artifacts {
	archives javadocJar, sourcesJar
}

signing {
	required { isReleaseBuild }
	sign configurations.archives
}

uploadArchives {
	repositories {
		mavenDeployer {
			beforeDeployment { signing.signPom(it) }

			def sonatypeUsername = project.getProperties().'sonatype.user'
			def sonatypePassword = project.getProperties().'sonatype.pass'

			repository(url: sonatypeRepositoryUrl) {
				authentication(userName: sonatypeUsername, password: sonatypePassword)
			}

			pom.project {
				name 'sql-formatter'
				packaging 'jar'
				url 'https://github.com/vertical-blank/sql-formatter'
				licenses {
					license {
						name 'The MIT License'
						url 'https://opensource.org/licenses/MIT'
					}
				}
				scm {
					url 'scm:git@github.com:vertical-blank/sql-formatter.git'
					connection 'scm:git@github.com:vertical-blank/sql-formatter.git'
					developerConnection 'scm:git@github.com:vertical-blank/sql-formatter.git'
				}
				developers {
					developer {
						id 'vertical-blank'
						name 'Yohei Yamana'
						email 'fixeight@gmail.com'
					}
				}
			}
		}
	}
}
